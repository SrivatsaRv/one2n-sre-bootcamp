name: CI Pipeline

on:
  push:
    branches:
      - milestone-4/setup-ci-pipeline
  pull_request:
    branches:
      - main
    paths:
      - 'milestone-4-setup-ci-pipeline/**'
  workflow_dispatch:

jobs:
  build-test-lint:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./milestone-4-setup-ci-pipeline

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h localhost -P 3306 --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    env:
      MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
      MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
      DB_HOST: 127.0.0.1  # Using localhost since the MySQL service is on the same host

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run linting
      run: make lint

    - name: Build API
      run: make build_flask_image

    - name: Run tests
      env:
        DB_URL: mysql://root:${{ secrets.MYSQL_ROOT_PASSWORD }}@127.0.0.1:3306/test_student_db
      run: make run_tests

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push Docker image
      env:
        DOCKER_REPO: ${{ secrets.DOCKERHUB_USERNAME }}/one2n-bootcamp
        TAG: ${{ github.sha }}
      run: |
        docker build -t $DOCKER_REPO:$TAG .
        docker push $DOCKER_REPO:$TAG