name: CI Pipeline

on:
  push:
    branches:
      - milestone-4/setup-ci-pipeline
  pull_request:
    branches:
      - main
    paths:
      - 'milestone-4-setup-ci-pipeline/**'
  workflow_dispatch:

jobs:
  ci-pipeline:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./milestone-4-setup-ci-pipeline  # Correct working directory

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h localhost --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    env:
      MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
      MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
      DB_HOST: mysql          # Correctly set to service name
      CI: true                # Indicates running in CI environment
      TAG: ${{ github.sha }}  # Use GitHub SHA as Docker image tag

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Wait for MySQL to be ready
        run: |
          for i in {1..30}; do
            if mysqladmin ping -h mysql --silent; then
              echo "MySQL is up"
              break
            fi
            echo "Waiting for MySQL..."
            sleep 2
          done

      - name: Create test database
        run: |
          mysql -h mysql -u root -p${MYSQL_ROOT_PASSWORD} -e "CREATE DATABASE IF NOT EXISTS test_student_db;"

      - name: Run linting
        run: make lint

      - name: Run CI Pipeline
        run: make ci_pipeline

      - name: Run tests
        run: make run_tests

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        env:
          DOCKER_REPO: ${{ secrets.DOCKERHUB_USERNAME }}/one2n-bootcamp
          TAG: ${{ github.sha }}
        run: |
          docker build -t $DOCKER_REPO:$TAG .
          docker push $DOCKER_REPO:$TAG

      - name: Clean up resources
        if: always()
        run: |
          make clean